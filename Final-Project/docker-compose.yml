version: '3.9'

services:

  restaurantservice:
    image: 'restaurant-service:latest'
    build:
      context: ./RestaurantService
    ports:
      - "8080:8080"
    networks:
      service-network:
        ipv4_address: 172.28.0.10
    container_name: "restaurant-service"

  userservice:
    image: 'user-service:latest'
    build:
      context: ./UserService
    ports:
      - "8081:8081"
    networks:
      service-network:
        ipv4_address: 172.28.0.2
    container_name: "user-service"



  adviceservice:
    image: 'advice-service:latest'
    build:
      context: ./AdviceService
    ports:
      - "8082:8082"
    networks:
      service-network:
        ipv4_address: 172.28.0.3
    container_name: "advice-service"

  solr1:
    image: solr:latest
    container_name: solr1
    ports:
      - "8983:8983"
    volumes:
      - ./RestaurantService/data/solr1:/var/solr
    networks:
      service-network:
        ipv4_address: 172.28.0.12


  kafkaservice:
    image: 'kafkaservice:latest'
    build:
      context: ./KafkaService
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    networks:
      service-network:
        ipv4_address: 172.28.0.4
    container_name: "kafka-service"



  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      service-network:
        ipv4_address: 172.28.0.5

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "errorLog:1:1, infoLog:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: 172.20.0.1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      service-network:
        ipv4_address: 172.28.0.11



  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      service-network:
        ipv4_address: 172.28.0.13
  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      service-network:
        ipv4_address: 172.28.0.14

networks:
  service-network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16